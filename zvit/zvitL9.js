import * as z from "./zvit.js";


const _descTextContent = `<h1 style="font-weight: normal"><b>Тема: </b>АСИНХРОННА ВЗАЄМОДІЯ КЛІЄНТСЬКОЇ І СЕРВЕРНОЇ ЧАСТИН WEB- ЗАСТОСУВАНЬ З ВИКОРИСТАННЯМ ТЕХНОЛОГІЇ AJAX. ФОРМУВАННЯ AJAX-ЗАПИТУ ЗАСОБАМИ JQUERY.</h1>У 9 Лабораторній роботі ми повинні були придбати практичні навички роботи основ асинхронного обміну даними мовою JavaScript за допомогою технології Ajax та бібліотеки Jquery, формування  Аjax-запиту засобами jQuery при реалізації практичних задач Web-програмування. Для ціх цілей ми використоували Apage Server, myPhpAdmin, php, HTML, CSS, JavaScript, SQL, jQuery, MySql, XML, AJAX, WebStorm, Visual Studio`;
const _tableTask = `<h1>Завдання</h1><p style="text-align: center;"><img src="../img/lab9/ajaxTask.png" /><h1>AJAX Запити</h1><p style="text-align: center;">Додавання</p><p style="text-align: center;"><img src="../img/lab9/fetchAddCode.png" /><p style="text-align: center;">Очищення</p><p style="text-align: center;"><img src="../img/lab9/fetchClearCode.png" /><p style="text-align: center;">Отримання</p><p style="text-align: center;"><img src="../img/lab9/fetchGetCode.png" /><p style="text-align: center;">Результат</p><p style="text-align: center;"><img src="../img/lab9/fetchResult.png" /><h1>HTML</h1><p>&lt;!DOCTYPE html&gt; <p>&lt;html lang="en"&gt; <p>&lt;head&gt; <p> &lt;link rel="stylesheet" type="text/css" href="style.css"&gt; <p> &lt;meta charset="UTF-8"&gt; <p> &lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"&gt;&lt;/script&gt; <p> &lt;title&gt;Bar Graph&lt;/title&gt; <p> &lt;div class="addNumbers"&gt;&lt;div&gt;&lt;input id="inputNum"&gt;&lt;button onclick="addNumber()"id="add_btn"&gt;Add&lt;/button&gt;&lt;/div&gt;&lt;div id="massive"&gt;[&lt;span id="numbers"&gt;&lt;/span&gt;]&lt;/div&gt;&lt;button onclick="draw()"&gt;Draw&lt;/button&gt;&lt;button id="clearBtn"&gt;Clear&lt;/button&gt;&lt;h1 id="caption"&gt;Гістограмма 2.0&lt;/h1&gt;&lt;/div&gt; <p> &lt;div class="chart"&gt; <p> &lt;ul class="numbers"&gt; <p> &lt;li&gt;&lt;span&gt;100%&lt;/span&gt;&lt;/li&gt; <p> &lt;li&gt;&lt;span&gt;50%&lt;/span&gt;&lt;/li&gt; <p> &lt;li&gt;&lt;span&gt;0&lt;/span&gt;&lt;/li&gt; <p> &lt;/ul&gt; <p> &lt;ul class="bars" id="bars"&gt; <p> &lt;/ul&gt; <p> &lt;/div&gt; <p> <p>&lt;/head&gt; <p>&lt;body&gt; <p>&lt;script src="script.js"&gt;&lt;/script&gt; <p>&lt;/body&gt; <p>&lt;/html&gt;</p><h1>CSS</h1><p>body{ <p> <p> margin: 0; <p> padding: 0; <p> height: 100vh; <p> background: #333; <p> font-family: "Roboto",sans-serif; <p>} <p>.addNumbers{ <p> text-align: center; <p> height: 200px; <p>} <p> <p>.chart{ <p> margin-top: 10px; <p> display: flex; <p> justify-content: center; <p> align-items: center; <p>} <p> <p>.numbers{ <p> color: #fff; <p> padding: 0; <p> margin: 0; <p> height: 100%; <p> width: 50px; <p> display: inline-block; <p> float: left; <p>} <p> <p>.numbers li{ <p> list-style: none; <p> height: 190px; <p> position: relative; <p> bottom: 85px; <p>} <p>.numbers span{ <p> font-size:12px; <p> position: absolute; <p> bottom: 0; <p> right: 10px; <p>} <p> <p>.bars{ <p> color: #fff; <p> font-size:12px; <p> margin: 0; <p> padding: 0; <p> display: flex; <p> flex-direction: row; <p> width: 700px; <p> height: 400px; <p> background: gray; <p> border-radius: 10px; <p> box-shadow: 0 0 10px 0 #555 ; <p>} <p>.bars li{ <p> display: block; <p> width: 50px; <p> height: 400px; <p> position: relative; <p>} <p>.bars span{ <p> width: 100%; <p> position: absolute; <p> bottom: -20px; <p> text-align: center; <p>} <p> <p>.bars .bar{ <p> display: block; <p> background: #17C0EB; <p> width: 20px; <p> height: 100px; <p> position: absolute; <p> bottom: 0; <p> margin-left: 15px; <p>} <p> <p>.bars .bar:hover{ <p> background: #55EFC4; <p> box-shadow: 0 0 10px 0 rgba(85,239,196,0.5); <p> cursor:pointer; <p>} <p>#caption{ <p> <p> color: #3366ff; <p>} <p> <p>button{ <p> padding: 0; <p> min-width: 116px; <p> width: 15%; <p> height: 50px; <p> margin-left: 20px; <p> font-size: 15pt; <p> border-radius: 10px; <p> <p>} <p>#massive{ <p> margin-top: 20px; <p> font-size:35pt; <p> margin-bottom: 40px; <p> color: #feffff; <p>} <p>#inputNum{ <p> width: 6%; <p> height: 60px; <p> font-size: 20pt; <p> padding-left: 10px; <p> min-width: 50px; <p> <p>}</p><h1>JavaScript</h1><p>let arr = [] <p>let counters = new Map() <p> <p>function getData(){ <p> return $.ajax("..//WebSites//lab9//dataGet.php") <p>} <p> <p>async function main(){ <p> let dataStr = await getData(); <p> let data = JSON.parse(dataStr) <p> if(data.num !== undefined) { <p> for (let i = 0; i < data.num.length; i++) { <p> arr.push(parseInt(data.num[i])) <p> } <p> await addNumberIntoHTML() <p> } <p> else{ <p> document.getElementById("numbers").innerText = ' ' <p> } <p> document.getElementById('clearBtn').addEventListener('click', clear) <p> <p>} <p> <p>async function addNumberIntoHTML(){ <p> let dataStr = await getData(); <p> let data = JSON.parse(dataStr) <p> if(data.num !== undefined) { <p> document.getElementById("numbers").innerText = data.num.toString() <p> } <p>} <p> <p>async function load(){ <p> await getPercents() <p> await addNumberIntoHTML() <p> await draw() <p>} <p> <p>setInterval(load,1000); <p> <p>function clear(){ <p> // function to clear in db <p> $.ajax({ <p> method: 'POST', <p> url:'..//WebSites//lab9//dataClear.php', <p> data: {confirm:true} <p> }) <p> arr.length = 0; <p> document.querySelector(".bars").innerHTML = '' <p> document.getElementById("numbers").innerText = ' ' <p>} <p> <p> <p>async function addNumber(){ <p> let number = document.getElementById("inputNum") <p> if(counters.size > 20 && !counters.has(parseInt(number.value))) { <p> document.getElementById("massive").innerText = "Max amount of unique elements" <p> } <p> else{ <p> if (!isNaN(parseInt(number.value))) { <p> arr.push(parseInt(number.value)) <p> // function to add to db <p> $.ajax({ <p> url:'..//WebSites//lab9//dataAdd.php', <p> method:'POST', <p> data: {num: parseInt(number.value)} <p> }) <p> } <p> number.value = "" <p> let arrStr = arr.toString() <p> document.getElementById("numbers").innerText = arrStr <p> await getPercents() <p> <p> } <p>} <p> <p>async function draw(){ <p> await getPercents() <p> const bars = document.getElementById("bars") <p> while(bars.firstChild){ <p> bars.removeChild(bars.lastChild) <p> } <p> for (let key of counters.keys()) { <p> bars.appendChild(document.createElement('li')) <p> bars.lastChild.appendChild(document.createElement("div")) <p> bars.lastChild.lastChild.className = "bar" <p> bars.lastChild.lastChild.style.height = (counters.get(key)-12).toString() + "px" <p> bars.lastChild.appendChild(document.createElement("span")) <p> bars.lastChild.lastChild.textContent = key.toString() <p> } <p>} <p> <p>async function getPercents(){ <p> let data = JSON.parse(await getData()) <p> let newArr = data.num; <p> counters.length = 0 <p> if(newArr !== undefined) { <p> for (let i = 0; i < newArr.length; i++) { <p> let counter = 0 <p> for (let j = 0; j < newArr.length; j++) { <p> if (newArr[i] === newArr[j]) { <p> counter += 1 <p> } <p> counters.set(newArr[i], (counter / newArr.length) * 400) <p> } <p> } <p> } <p> <p> <p>} <p>addEventListener("keyup", function(event) { <p> if (event.keyCode === 13) { <p> document.getElementById("add_btn").click(); <p> } <p>}); <p> <p>main()</p>`;
const _ajaxOur = `<h1>AJAX Запит (Weather)</h1><p style="text-align: center;">Запит</p><p style="text-align: center;"><img src="../img/lab9/ourFetch.png" /><p style="text-align: center;">Результат</p><p style="text-align: center;"><img src="../img/lab9/ourFetchResult.png" /><p style="text-align: center;">Візуалізація</p><p style="text-align: center;"><img src="../img/lab9/ourFetchVisual.png" />`;
const _programFunctional = `<h1>Перелік функцій Інтерактивного календаря</h1><p>• Ідентифікувати користувача;</p><p>• Зберігати дані користувача;</p><p>• Можливість створити, змінити та видалити свій розклад;</p><p>• Можливість створити, змінити та видалити нотатки;</p><p>• Можливість змінити зовнішній вигляд календаря задля зручного використання;</p><p>• Пошук нотатки за ключовим словом;</p><h1>Можливий сценарій</h1><p>1. Користувач ідентифікує себе;</p><p>2. Користувач переглядає актуальний розклад;</p><p>3. Користувач створює нову нотатку;</p><p>4. Користувач редагує нотатку;</p><p>5. Користувач шукає нотатку;</p><p>6. Користувач видаляє нотатку;</p><p>7. Користувач редагує розклад;</p><p>8. Користувач зберігає розклад;</p><p>9. Користувач виходить з веб-сторінки;</p>`;
const _compareFunctional = `

<h1>Щодо функціоналу</h1><p>

Функціонал в завданні та функціонал в готовій роботі повністю співпадає. Існує створення, видалення, редагування заходу, додано авторизацію користувача, створено зручні інформери додаткової іформації.

</p><h1>Щодо Адаптування</h1><p>

Так, нотатки та розклад змінено на заходи. Також додано інформер актуальної погоди.

</p><h1>Щодо Висновків</h1><p>

Взагалі, незалежно від деяких адаптацій, функціонал виконано повністю по завданню. Також важливо, що ми навчилися використовувати найрізноманітніші мови, структури та бібліотеки для створення повноцінних веб-застосувань, що відповідають сучасним вимогам та мають право на конкурування з enterprise проєктами.

</p>
`;
const _conclusions =  `На цій лабораторній роботі ми набули практичні навички роботи основ асинхронного обміну даними мовою JavaScript за допомогою технології Ajax та бібліотеки Jquery, формування  Аjax-запиту засобами jQuery при реалізації практичних задач Web-програмування. Також набули досвыду крос-мовного програмування, проаналызували роботу, завдання та навчилися оптимізувати процеси розробки під актуальні проблеми, потреби, обмеження в часі, ресурсах тощо.`;

export default function showLab9(leftButtons){
    z.createLeftInfoBtn(leftButtons, "Тема та постановка задачі Лабораторної роботи №9", _descTextContent);
    z.createBtnWithRedirect(leftButtons, "Виконання другого пункту (Аjax-запит, Таблиця)", "../lab9/");
    z.createLeftInfoBtn(leftButtons, "Опис другого пункту (Аjax-запит, Таблиця)", _tableTask, z.fontSizeHeightLineHTML);
    z.createBtnWithRedirect(leftButtons, "Власний сайт", "../WebSites/lab9/client/index.php");
    z.createLeftInfoBtn(leftButtons, "Аjax-запити у власному сайті", _ajaxOur, z.fontSizeHeightLineHTML);
    z.createLeftInfoBtn(leftButtons, "Повний список функціоналу програми", _programFunctional, z.fontSizeHeightLineHTML);
    z.createLeftInfoBtn(leftButtons, "Порівняння функціоналу першої та девятої лабораторних", _compareFunctional);
    z.createLeftInfoBtn(leftButtons, "Висновки", _conclusions);

}